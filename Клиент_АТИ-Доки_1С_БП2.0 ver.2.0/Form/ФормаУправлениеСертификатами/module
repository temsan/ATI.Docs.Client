
Перем API;
Перем АвтоЦвет;



#Область КлиентскаяЛогика

Процедура ЗаполнитьСертификаты()
	
	ВладелецФормы.ОбновитьСертификаты();
	Сертификаты = ЭтотОбъект.Сертификаты;
	
КонецПроцедуры

Функция РедактироватьЭкстраСертификата(ВыбраннаяСтрока)
	
	ФормаСертификата = ПолучитьФорму("ФормаСертификата");
	ФормаСертификата.Заголовок = "Сертификат "+ВыбраннаяСтрока.Отпечаток;
	ФормаСертификата.Наименование = ВыбраннаяСтрока.Наименование;
	ФормаСертификата.Период = "Период действия: "+ПредставлениеПериода(ВыбраннаяСтрока.ДействителенС, ВыбраннаяСтрока.ДействителенПо, "ФП=Истина");
	
	СвойстваСертификата = ЗначениеИзСтрокиВнутр(ВыбраннаяСтрока.Свойства);
	Если ТипЗнч(СвойстваСертификата)=Тип("Соответствие") Тогда
		INN = СвойстваСертификата.Получить("INN"); 
		Если INN <> Неопределено Тогда
			ФормаСертификата.ИНН = INN;
		КонецЕсли;
		SNILS = СвойстваСертификата.Получить("SNILS");
		Если SNILS <> Неопределено Тогда
			Попытка
				ФормаСертификата.СНИЛС = Формат(Число(SNILS/100), "ЧЦ=11; ЧДЦ=2; ЧРД=-; ЧРГ=-; ЧВН=");
			Исключение
			
			КонецПопытки;
		КонецЕсли;
		OGRN = СвойстваСертификата.Получить("OGRN");
		Если OGRN <> Неопределено Тогда
			ФормаСертификата.ОГРН = OGRN;
		КонецЕсли;
		
		IFNS = СвойстваСертификата.Получить("ifns");
		Если IFNS <> Неопределено Тогда
			ФормаСертификата.ИФНС = IFNS;
		КонецЕсли;
		
		region_code = СвойстваСертификата.Получить("region_code");
		Если region_code <> Неопределено Тогда
			ФормаСертификата.КодРегиона = region_code;
		КонецЕсли;
		
		street = СвойстваСертификата.Получить("street");
		Если street <> Неопределено Тогда
			ФормаСертификата.Адрес = street;
		КонецЕсли;
	КонецЕсли;
	
	ФормаСертификата.Комментарий = СвойстваСертификата["comment"];
	
	ФормаСертификата.ВладелецФормы = ЭтаФорма;
	
	НовыеСвойства = ФормаСертификата.ОткрытьМодально();
	
	Если ТипЗнч(НовыеСвойства) = Тип("Структура") Тогда
		
		ВыбраннаяСтрока.extra = НовыеСвойства;
		ВыбраннаяСтрока.РеквизитыЗаполнены = НЕ ПустаяСтрока(НовыеСвойства.ogrn)
					И НЕ ПустаяСтрока(НовыеСвойства.ifns)
					И НЕ ПустаяСтрока(НовыеСвойства.region_code);
					
	КонецЕсли;
	
	Возврат НовыеСвойства;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормыКлиент

Процедура ПриОткрытии()
	
	ЗаполнитьСертификаты();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементов

Процедура СертификатыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если Колонка.Имя = "Активный" ИЛИ Колонка.Имя = "СертификатСсылка" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	СвойстваСертификата = РедактироватьЭкстраСертификата(ВыбраннаяСтрока);
	
	Если ЗначениеЗаполнено(СвойстваСертификата) Тогда
		Попытка
			
			// Старый метод API, возможно придется убрать
			API.Certificate_MetaData_Set(ВыбраннаяСтрока.Отпечаток, СвойстваСертификата);
			
			ВладелецФормы.ОбновитьСертификаты();
			
		Исключение
			
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

Процедура СертификатыПриИзмененииФлажка(Элемент, Колонка)
	
	ТекДанные = ЭлементыФормы.Сертификаты.ТекущиеДанные;
	
	АктивныйСертификат = ТекДанные.Отпечаток;
	АктивныйСертификатСтрока = ТекДанные;
	
	Для каждого Стр Из Сертификаты Цикл
		
		Если Стр = ТекДанные Тогда
			Стр.Пометка = Истина;
		Иначе
			Стр.Пометка = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКоманд

Процедура КомандаОтправитьЗаявкуВФНС(Кнопка)
	
	ТекДанные = ЭлементыФормы.Сертификаты.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		
		Если ТекДанные.РеквизитыЗаполнены = Истина Тогда
			
			Попытка
				Результат1С = API.IFNS(ТекДанные.Отпечаток, ТекДанные.token, ЗначениеИзСтрокиВнутр(ТекДанные.extra));
			Исключение
				Возврат;
			КонецПопытки;
			
			Если Результат1С <> Неопределено Тогда
				Сообщить("Заявка в ФНС отправлена");
				ВладелецФормы.ОбновитьСертификаты();
			КонецЕсли;
			
		Иначе
			
			ОчиститьСообщения();
			Сообщить("Для отправки заявки в ФНС заполните эти реквизиты:
			| - код ИФНС,
			| - ОГРН,
			| - код региона");
			
			НовыеСвойства = РедактироватьЭкстраСертификата(ТекДанные);
			
			Если ТекДанные.РеквизитыЗаполнены = Истина Тогда
				
				Результат1С = API.IFNS(ТекДанные.Отпечаток, ТекДанные.token, НовыеСвойства);
				Если Результат1С <> Неопределено Тогда
					Сообщить("Заявка в ФНС отправлена");
					ВладелецФормы.ОбновитьСертификаты();
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КомандаДобавитьСертификат(Кнопка)
	
	Сертификат = ОткрытьФормуМодально("Справочник.СертификатыЭЦП.ФормаВыбора");
	
	Если Сертификат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Ответ = API.Certificate_Create(Сертификат);
	Если Ответ = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	ОтпечатокСтр = СтрЗаменить(Base64Значение(Сертификат.Отпечаток), " ", "");
	
	НоваяСтр = Сертификаты.Добавить();
	НоваяСтр.СертификатСсылка = Сертификат;
	НоваяСтр.Отпечаток = ОтпечатокСтр;
	НоваяСтр.Отпечаток64 = Сертификат.Отпечаток;
	НоваяСтр.ЗашифрованныйТокен = Ответ["token"]; 
	
	Модифицированность = Истина;
	
	ЗаполнитьСертификаты();
	
	Если Сертификаты.Количество() = 1 Тогда
		АктивныйСертификат = Сертификаты[0].Отпечаток;
		АктивныйСертификатСтрока = Сертификаты[0];
	КонецЕсли; 							
	
КонецПроцедуры


Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Сертификаты.Количество() = 1 Тогда
		ЭтотОбъект.АктивныйСертификат = Сертификаты[0].Отпечаток;
	КонецЕсли;
	
	Закрыть(Модифицированность);
	
КонецПроцедуры

Процедура СертификатыПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		ЭлементыФормы.КоманднаяПанель.Кнопки.ОтправитьЗаявкуВФНС.Доступность = Ложь;
		Возврат;
	КонецЕсли;
	
	КабинетНеСоздан = (ТекДанные.КодСтатуса = "not_registered")
		ИЛИ ПустаяСтрока(ТекДанные.КодСтатуса)
		И НЕ ПустаяСтрока(ТекДанные.token);
	
	ЭлементыФормы.КоманднаяПанель.Кнопки.ОтправитьЗаявкуВФНС.Доступность = КабинетНеСоздан;
	
КонецПроцедуры

Процедура СертификатыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	
	
КонецПроцедуры

Процедура СертификатыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		Если ОформлениеСтроки.ДанныеСтроки.Пометка Тогда
			ОформлениеСтроки.ЦветТекста = АвтоЦвет;
		Иначе
			ОформлениеСтроки.ЦветТекста = ЦветаСтиля.ТекстВторостепеннойНадписи;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СертификатыПередУдалением(Элемент, Отказ)
	
	ТекДанные = ЭлементыФормы.Сертификаты.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		
		Отказ = Истина;
		API.Certificate_Delete(ТекДанные.Отпечаток);
		
		ВладелецФормы.ОбновитьСертификаты();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

API = ВладелецФормы.API;
АвтоЦвет = Новый Цвет;

