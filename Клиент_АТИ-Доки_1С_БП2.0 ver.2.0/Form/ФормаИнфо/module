
Перем API Экспорт;
Перем СтруктураСправочники Экспорт;
Перем ПредставлениеАккаунта Экспорт;

Процедура ОбновитьДанныеАккаунта()
	
	Результат1С = API.Account();
	
	Если Результат1С = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСправочники = ВладелецФормы.СтруктураСправочники;
	
	Если Не СтруктураСправочники.Свойство("Города") Тогда
		ВладелецФормы.ОбновитьСправочники();
		СтруктураСправочники = ВладелецФормы.СтруктураСправочники;
	КонецЕсли;
	
	ИнформацияОКомпании = СформироватьИнформациюОбАккаунте(Результат1С, СтруктураСправочники, Истина);
	ПредставлениеАккаунта = Результат1С["name"];
	КонтактныеЛица.Очистить();
	contacts = Результат1С["contacts"];
	Для Каждого КЛ Из contacts Цикл
		СтрКЛ = КонтактныеЛица.Добавить();
		СтрКЛ.Наименование = КЛ.Значение["name"];
		СтрКЛ.id = КЛ.Значение["ati_id"];
		Email = КЛ.Значение["email"];
		Если ЗначениеЗаполнено(Email) Тогда
			СтрКЛ.Email = Email;
		КонецЕсли;
		phone = КЛ.Значение["phone"];
		Если ЗначениеЗаполнено(phone) Тогда
			СтрКЛ.Телефон = Phone;
		КонецЕсли;
		mobile = КЛ.Значение["mobile"];
		Если ЗначениеЗаполнено(mobile) Тогда
			СтрКЛ.МобильныйТелефон = mobile;
		КонецЕсли;
		fax = КЛ.Значение["fax"];
		Если ЗначениеЗаполнено("fax") Тогда
			СтрКЛ.Факс = fax;
		КонецЕсли;
	КонецЦикла;
	   		
КонецПроцедуры

Процедура ИнформацияОКомпанииНажатие(Элемент)
		ОткрытьСтраницуКонтрагента(UserID);
КонецПроцедуры

Процедура ПриОткрытии()
	ОбновитьДанныеАккаунта();
КонецПроцедуры

API = ПолучитьФорму("API");
СтруктураСправочники = Новый Структура;


