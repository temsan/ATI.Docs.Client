Перем API;

Процедура ПриОткрытии()
	
	Результат1С = API.Account(ID);
	
	Если Результат1С = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИнформацияОКонтрагенте = СформироватьИнформациюОбАккаунте(Результат1С, ВладелецФормы.СтруктураСправочники);
	КонтрагентНаименование = Результат1С.Получить("name");
	ТабличноеПолеКонтакты.Очистить();
	contacts = Результат1С.Получить("contacts");
	Для Каждого Контакт Из contacts Цикл
		СтрКонтакт = ТабличноеПолеКонтакты.Добавить();
		СтрКонтакт.Имя = Контакт.Получить("name");
		Email = Контакт.Получить("email");
		Если ЗначениеЗаполнено(Email) Тогда
			СтрКонтакт.Email = Email;
		КонецЕсли;
		phone = Контакт.Получить("phone");
		Если ЗначениеЗаполнено(phone) Тогда
			СтрКонтакт.Телефон = Phone;
		КонецЕсли;
		mobile = Контакт.Получить("mobile");
		Если ЗначениеЗаполнено(mobile) Тогда
			СтрКонтакт.МобильныйТелефон = mobile;
		КонецЕсли;
		fax = Контакт.Получить("fax");
		Если ЗначениеЗаполнено("fax") Тогда
			СтрКонтакт.Факс = fax;
		КонецЕсли;
	КонецЦикла;
	ЭтаФорма.Заголовок = "Контрагент "+КонтрагентНаименование;
	
	has_diadoc_cabinet = Результат1С.Получить("has_diadoc_cabinet");
	Сертификаты.Очистить();
	
	Если has_diadoc_cabinet = Истина Тогда
		
		КоллекцияСертификатов = API.Certificates(ID);
		
		Если КоллекцияСертификатов = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Сертификаты.Очистить();
		
		СтатусКабинетаДиадок = "";
		
		Для каждого ЭлемСертификат Из КоллекцияСертификатов Цикл
			
			Если Истина ИЛИ ЭлемСертификат["integrator"]["status_code"] = "active" Тогда
				
				Если ПустаяСтрока(ЭлемСертификат["integrator"]["box_id"]) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ТипЗнч(ЭлемСертификат["valid_until"]) = Тип("Дата") И ЭлемСертификат["valid_until"] < НачалоДня(ТекущаяДата()) Тогда
					Продолжить;
				КонецЕсли;
				
				Стр = Сертификаты.Добавить();
				Стр.Отпечаток = ЭлемСертификат["id"];
				Стр.Наименование = ЭлемСертификат["title"];
				Стр.Провайдер = ЭлемСертификат["integrator"]["box_id"];
				Стр.КабинетID = ЭлемСертификат["integrator"]["edo_id"];
								
				СтатусКабинетаДиадок = "Есть кабинет в ФНС";
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОсновныеДействияФормыСоздатьДокумент(Кнопка)
	ФормаДокумента = ПолучитьФорму("ФормаДокумента", ВладелецФормы);
	ФормаДокумента.КонтрагентId = ID;
	ФормаДокумента.ПриИзмененииКонтрагентID();
	ФормаДокумента.ОткрытьМодально();
КонецПроцедуры

Процедура ОсновныеДействияФормыКарточкаATI(Кнопка)
	ОткрытьСтраницуКонтрагента(id);
КонецПроцедуры

Процедура ПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.WebСтраница Тогда
		Попытка
			ЭлементыФормы.ПолеHTMLДокумента.Перейти("http://www.ati.su/Tables/Info.aspx?ID="+Формат(id, "ЧГ=0"));
		Исключение
			Сообщить("Ошибка");
		КонецПопытки;
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.Документы Тогда
		Попытка
			ТабличноеПолеДокументы.Очистить();
			Соединение = Новый HTTPСоединение("ati.su");
			ЗаголовкиHTTP = Новый Соответствие();
			ЗаголовкиHTTP.Вставить("Accept", "text/html");
			Запрос = Новый HTTPЗапрос("/Tables/Info.aspx?ID="+Формат(id, "ЧГ=0"), ЗаголовкиHTTP);
			Ответ = Соединение.Получить(Запрос);
			ОтветСтрокой = Ответ.ПолучитьТелоКакСтроку();
			
			ЧтениеHTML = Новый ЧтениеHTML;
			ЧтениеHTML.УстановитьСтроку(ОтветСтрокой);
	
			ПостроительDOM = Новый ПостроительDOM;
			ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
			ЭлементыDOM = ДокументHTML.ПолучитьЭлементыПоИмени("li");
			Для Каждого ЭлементDOM Из ЭлементыDOM Цикл
				ЭлементыДокумент = ЭлементDOM.ПолучитьЭлементыПоИмени("a");
				Для Каждого ЭлементДокумент Из ЭлементыДокумент Цикл
					СтрДокумент = ТабличноеПолеДокументы.Добавить();
					СтрДокумент.Описание = СокрЛП(ЭлементДокумент.ТекстовоеСодержимое);
					СтрДокумент.Ссылка = СокрЛП(ЭлементДокумент.Гиперссылка);
				КонецЦикла;
			КонецЦикла;
			
			ЭлементРейтинг = ДокументHTML.ПолучитьЭлементПоИдентификатору("ctlStarReliability_ctlStarControl");
			Если ЭлементРейтинг <> Неопределено Тогда
				Рейтинг = ЭлементРейтинг.Атрибуты[1].Значение;
			Иначе
				Рейтинг = "Рейтинг не определен";
			КонецЕсли;
			
		Исключение
			
		КонецПопытки;
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.АТИ_Доки Тогда
		//костыль. ждем доработку АПИ
		СтруктураПапок = API.MailBox();
		ДокументыАТИ_Доки.Очистить();
		КоличествоДокументов = СтруктураПапок.Получить("documents")[0];
		Фильтр = Новый Массив;
		Фильтр.Добавить("""ati_id"":"""+Формат(id, "ЧГ=0")+"""");
		
		Для Н=1 По КоличествоДокументов Цикл
			ДокументН = API.Documents("documents", Н-1, 1, Фильтр);
			Если ДокументН <> Неопределено Тогда
				СтрДокументыАТИ_Доки = ДокументыАТИ_Доки.Добавить();
				СтрДокументыАТИ_Доки.ID = ДокументН[0].Получить("id");
				СтрДокументыАТИ_Доки.ТипДокумента = ДокументН[0].Получить("doctype");
				СтрДокументыАТИ_Доки.ДатаДокумента = СтрокаВДату(ДокументН[0].Получить("date"));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеДокументыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = ЭлементыФормы.ТабличноеПолеДокументы.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Ссылка) Тогда
		ЗапуститьПриложение(ТекДанные.Ссылка);
	КонецЕсли;
КонецПроцедуры

Процедура ТабличноеПолеКонтактыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ТекДанные = ЭлементыФормы.ТабличноеПолеКонтакты.ТекущиеДанные;
	Если Колонка.Имя="email" И ЗначениеЗаполнено(ТекДанные.email) Тогда
		СтандартнаяОбработка = Ложь;
		ЗапуститьПриложение("mailto:"+ТекДанные.email);
	КонецЕсли;
КонецПроцедуры

Процедура ДокументыАТИ_ДокиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ФормаДокумента = ПолучитьФорму("ФормаДокумента", ВладелецФормы);
	ФормаДокумента.id = ВыбраннаяСтрока.ID;
	ФормаДокумента.ОткрытьМодально();

КонецПроцедуры

Процедура ИнформацияОКонтрагентеНажатие(Элемент)
	ОткрытьСтраницуКонтрагента(id);
КонецПроцедуры

//служебная функция для автотеста
Процедура ВыполнитьКоманду(ТекстКоманды) Экспорт
	Выполнить(ТекстКоманды);
КонецПроцедуры

API = ВладелецФормы.API;