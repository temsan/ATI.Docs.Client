
Перем ФлагПрименить;

Перем НастройкиПоЛогину;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	ПрименитьНастройки();
	
КонецПроцедуры

Процедура ПрименитьНастройки()
	
	ОбработкаОбъект.АдресСервера = АдресСервера;
	ОбработкаОбъект.Логин = Логин;
	ОбработкаОбъект.Пароль = Пароль;
	
	ОбработкаОбъект.ИспользоватьЗащищенноеСоединение = ИспользоватьЗащищенноеСоединение;
	
	ОбработкаОбъект.ДокументовНаСтранице =  ДокументовНаСтранице;
	
	ОбработкаОбъект.ОтправлятьЧерезАгента = ОтправлятьЧерезАгента;
	ОбработкаОбъект.КаталогАгента = КаталогАгента;
	ОбработкаОбъект.ПолучатьСервисныеСообщения = ПолучатьСервисныеСообщения;
	
	ОбработкаОбъект.token = token;
	
	ОбработкаОбъект.Сертификаты = Сертификаты;
	ОбработкаОбъект.АктивныйСертификат = АктивныйСертификат;
	ОбработкаОбъект.АктивныйСертификатСтрока = АктивныйСертификатСтрока;
	
	Модифицированность = Ложь;
	ФлагПрименить = Истина;
	Закрыть(Истина);

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ОбработкаОбъект);
	
	
	Если ПустаяСтрока(АдресСервера) Тогда
		АдресСервера = "d.ati.su";
		Модифицированность = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДокументовНаСтранице) Тогда
		ДокументовНаСтранице = 20;
		Модифицированность = Истина;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность
		 И ЗначениеЗаполнено(АдресСервера)
		 И ЗначениеЗаполнено(Логин)
		 И ЗначениеЗаполнено(Пароль) Тогда
		 
		Ответ = Вопрос("Настройки были изменены. Сохранить?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПрименитьНастройки();
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда	
			//Просто закрываем
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда	
			Отказ = Истина;
		КонецЕсли;
		
	Иначе
		
		ФлагОК = Истина;
		Сообщения = "";
		
		Если Не ЗначениеЗаполнено(АдресСервера) Тогда
			Сообщения = Сообщения + "Не заполнен адрес сервера"+Символы.ПС;
			ФлагОК = Ложь;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Логин) Тогда
			Сообщения = Сообщения + "Не заполнен логин"+Символы.ПС;
			ФлагОК = Ложь;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Пароль) Тогда
			Сообщения = Сообщения + "Не заполнен пароль";
			ФлагОК = Ложь;
		КонецЕсли;
		
		Если Не ФлагОК Тогда
			Если ФлагПрименить Тогда
				ОчиститьСообщения();
				Сообщить(Сообщения);
			КонецЕсли;
			
			Ответ = Вопрос("Закрыть обработку?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				ФлагПрименить = Ложь;
			Иначе
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЛоготипНажатие(Элемент)
	
	Если НЕ ПустаяСтрока(token) Тогда
		ЗапуститьПриложение("http://"+АдресСервера+"/api/session/"+token);
	Иначе
		ЗапуститьПриложение("http://" + АдресСервера + "/welcome/");
	КонецЕсли;
	
КонецПроцедуры


Процедура КаталогАгентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбора.Каталог = КаталогАгента;
	ДиалогВыбора.МножественныйВыбор = Ложь;
	ДиалогВыбора.Заголовок = "Выберите каталог ""Агента"" АТИ-Доки";
	Если ДиалогВыбора.Выбрать() Тогда
		КаталогАгента = ДиалогВыбора.Каталог;
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры


Процедура КнопкаУстановитьАгентНажатие(Элемент)
	
	МакетАгент = ПолучитьМакет("МакетАгент");
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("exe");
	МакетАгент.Записать(ИмяВременногоФайла);
	
	WSH=Новый COMobject("wscript.shell"); 
	ProgramFiles = WSH.ExpandEnvironmentStrings("%ProgramFiles%");
	
	КаталогФайлаАгента = ProgramFiles+"\ADA\";
	КаталогОбъект = Новый Файл(КаталогФайлаАгента);
	Если НЕ КаталогОбъект.Существует() Тогда
		Попытка
			СоздатьКаталог(КаталогФайлаАгента);
		Исключение
			//скорей всего UAC
			ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
			ДиалогВыбора.Заголовок = "Выбор каталога исполняемого файла ""АТИ-Доки Агента""";
			ДиалогВыбора.Каталог = ProgramFiles;
			Если ДиалогВыбора.Выбрать() Тогда
				КаталогФайлаАгента = ДиалогВыбора.Каталог;
			Иначе
				Возврат;
			КонецЕсли;
		КонецПопытки
	КонецЕсли;
	
	ИмяФайлаАгента = КаталогФайлаАгента + "ada.exe";
	
	Попытка
		ПереместитьФайл(ИмяВременногоФайла, ИмяФайлаАгента);
	Исключение
		Сообщить("Не удалось скопировать файл агента в каталог """+КаталогФайлаАгента+""". Выберите другой каталог.");
		ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		ДиалогВыбора.Заголовок = "Выбор каталога исполняемого файла ""АТИ-Доки Агента""";
		Если ДиалогВыбора.Выбрать() Тогда
			КаталогФайлаАгента = ДиалогВыбора.Каталог;
			ИмяФайлаАгента = КаталогФайлаАгента + "\ada.exe";
			ПереместитьФайл(ИмяВременногоФайла, ИмяФайлаАгента);
			Сообщить("Исполняемый файл агента успешно скопирован в """+ИмяФайлаАгента+"""");
		КонецЕсли;
	КонецПопытки;

КонецПроцедуры

Процедура ИспользоватьАгентПриИзменении(Элемент)
	УправлениеВидимостьюДоступностьюЭлементовФормы();
КонецПроцедуры



Процедура ПриОткрытии()
	
	НастройкиПоЛогину = ВосстановитьЗначение("Настройки_АТИ_Доки");
	
	Если ТипЗнч(НастройкиПоЛогину) = Тип("Соответствие") Тогда
		
		Для Каждого Элемент Из НастройкиПоЛогину Цикл
			
			Если Элемент.Ключ = "ТекущийЛогин" Тогда
				Продолжить;
			КонецЕсли;
			
			ЭлементыФормы.Логин.СписокВыбора.Добавить(Элемент.Ключ);
			
		КонецЦикла;
		
		ЭлементыФормы.Логин.СписокВыбора.СортироватьПоЗначению();
		
	КонецЕсли;
	
	УправлениеВидимостьюДоступностьюЭлементовФормы();
	
КонецПроцедуры


Процедура КнопкаЗарегистрироватьВнешнююПечатнуюФормуНажатие(Элемент)
	
	МакетОбработки = ПолучитьМакет("МакетВнешняяПечатнаяФорма");
	ИмяФайлаОбработки = ПолучитьИмяВременногоФайла(".epf");
	МакетОбработки.Записать(ИмяФайлаОбработки);
	
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ВнешниеОбработкиПринадлежность.Ссылка
	|ИЗ
	|	Справочник.ВнешниеОбработки.Принадлежность КАК ВнешниеОбработкиПринадлежность
	|ГДЕ
	|	ВнешниеОбработкиПринадлежность.СсылкаОбъекта = &СсылкаОбъекта
	|	И ВнешниеОбработкиПринадлежность.ПредставлениеКнопки = &ПредставлениеКнопки";
	Запрос.УстановитьПараметр("СсылкаОбъекта", Документы.РеализацияТоваровУслуг.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПредставлениеКнопки", "Отправить через АТИ-Доки");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		СпрОбъект = Справочники.ВнешниеОбработки.СоздатьЭлемент();
		ТекстСообщения = "Внешняя форма успешно создана";
	Иначе
		СпрОбъект = РезультатЗапроса.Выгрузить()[0].Ссылка.ПолучитьОбъект();
		ТекстСообщения = "Внешняя форма успешно обновлена";
	КонецЕсли;
	
	Если Ложь Тогда
		СпрОбъект = Справочники.ВнешниеОбработки.СоздатьЭлемент();
	КонецЕсли;
	
	СпрОбъект.Принадлежность.Очистить();
	СпрОбъект.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма;
	СпрОбъект.ХранилищеВнешнейОбработки = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ИмяФайлаОбработки));   
	СпрОбъект.Наименование = "Отправить через АТИ-Доки";
	
	СтрПринадлежность = СпрОбъект.Принадлежность.Добавить();
	
	СтрПринадлежность.СсылкаОбъекта = Документы.РеализацияТоваровУслуг.ПустаяСсылка();
	СтрПринадлежность.ПредставлениеКнопки = "Отправить через АТИ-Доки";
	СтрПринадлежность.ПредставлениеОбъекта = "Документ ""Реализация товаров и услуг""";
	Попытка 
		СпрОбъект.Записать();
		Сообщить(ТекстСообщения);
	Исключение
		Сообщить(ИнформацияОбОшибке());
	КонецПопытки;

КонецПроцедуры


Процедура КнопкаСправкаДопФормаНажатие(Элемент)
	Сообщить("Добавление элемента в справочник ""Дополнительные отчеты и обработки""
	|(регистрация внешней печатной формы для документа ""Реализация товаров и услуг"")
	|для формирования и отправки электронных документов из формы документа");
КонецПроцедуры


Процедура ЛогинОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВладелецФормы.СохранитьНастройки();
	
	ТекущийЛогин = ВыбранноеЗначение;
	token = "";
	ВладелецФормы.ЗаполнитьНастройкиПоЛогину(ЭтаФорма, НастройкиПоЛогину, ТекущийЛогин);
			
КонецПроцедуры

Процедура УправлениеВидимостьюДоступностьюЭлементовФормы()
	
	ОтправитьЧерезАгентаДоступность = Истина;
	ЭлементыФормы.ПанельАгент.Доступность = ОтправлятьЧерезАгента;
	Если ОтправлятьЧерезАгента Тогда
		ЭлементыФормы.ПанельАгент.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.ПанельАгент.Свертка = РежимСверткиЭлементаУправления.Верх;
		КаталогАгентаНастройки = "";
	КонецЕсли;
		
КонецПроцедуры

Процедура ПарольПриИзменении(Элемент)
	
	token = "";
	
КонецПроцедуры

ФлагПрименить = Ложь;
